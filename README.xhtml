<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" 
      xml:lang="en" lang="en">
<head>
  <title>Android Units</title>
  <link rel="stylesheet" href="android_style.css" type="text/css" />
  <style type="text/css">
  kbd { border: 1px dotted #ccc; }
  </style>
</head>

  <body>
    <h1 class="webonly"><img src="res/drawable-mdpi/icon.png" alt="" style="vertical-align: middle" />Android Units</h1>
    <p>Android Units is a powerful unit-aware calculator that can also easily perform simple unit conversions. It's inspired by GNU Units.</p>
        

    <h2 class="webonly">Download</h2>
    <a class="webonly" href="market://search?q=pname:info.staticfree.android.units" style="float: left"><img src="market_qrcode.png" alt="" style="border: none" /></a>

    <p class="webonly">You can <a href="market://search?q=pname:info.staticfree.android.units">download Units from the Android market</a> or directly from <a href="Units.apk">Units.apk</a>.</p>

    <h2>Usage</h2>
        
<p>Place the value and the unit you want to convert from in the "you have" box (eg. <kbd>4.9inches</kbd>) and the unit you wish to convert to in the "you want" box (eg. <kbd>cm</kbd>). To enter units, either press the "unit" button and select from the list, or tap on the input box a second time and an on-screen keyboard should pop up.</p>

<p>You can enter simple units, such as <kbd>cm</kbd>/<kbd>centimeter</kbd> or complex units, such as <kbd>m^3÷hr</kbd>. You can press the "unit" button to show a list of all the units. If you don't specify a "to" unit, it will provide a definition in base units. For a list of examples, please see below.</p>
        
    <h2>Auto-completion</h2>
    <a class="webonly" href="sshot02.png" style="float: right"><img src="sshot02.thumb.png" /></a>
<p>Both "you have" and "you want" will auto-complete with all the known units, sorted by usage. The more you use a given unit, the closer it is to the top of the list. The usage is seeded with initial usage values for common units, including regional weights based on your device's locale.</p>
        
<p>Units will not start off auto-completing every possible permutation of metric prefix (eg. <kbd>deci</kbd>, <kbd>centi</kbd>, <kbd>milli</kbd>) with unit name (<kbd>meter</kbd>, <kbd>liter</kbd>). Once you make a calculation with a prefix+unit combination, Units will remember it and auto-complete it from then-on.</p>

    <h2>Reciprocal detection</h2>

<p>Units will auto-detect instances where you may have forgotten to convert from the reciprocal of a given value. For instance, if you enter <kbd>100mpg</kbd> and ask for <kbd>liter÷100km</kbd>, it will compute it using the reciprocal of the "from" value (<kbd>1÷(100mpg)</kbd>) and provide a warning that it used the reciprocal.</p>

    <h2>Calculations</h2>
    <a class="webonly" href="sshot01.png" style="float: left"><img src="sshot01.thumb.png" /></a>
        
<p>You can enter complex calculations in both input areas. For example, you can add two conformable units such as, <kbd>2 cm + (4 + (1/2)) in</kbd> or multiply values to higher dimensions, such as, <kbd>3m × 1m × 2cm</kbd> to convert to <kbd>liter</kbd> or <kbd>m^3</kbd>. You can even convert to an arbitrary complex unit, provided that everything conforms properly.</p>

    <h2>Examples</h2>
<h3>Practical conversions</h3>
<dl>
    <dt>US→EU height conversion</dt>
    <dd>5ft + 6in = 167.64 cm</dd>
    <dt>UK→US weight conversion</dt>
    <dd>13 stone = 182 lbs</dd>
    <dt>Volume conversion</dt>
    <dd>10cm×5cm ×3cm = 0.15 liter</dd>
    <dt>Kitchen: volume to weight</dt>
    <dd>1cup flour_sifted = 113.398094 g</dd>
    <dt>Driving: time to distance</dt>
    <dd>100kph ×5minute = 5.1780934 mile</dd>
</dl>

<h3>Fun conversions</h3>
<dl>
    <dt>Your weight in eggs</dt>
    <dd>78kg = 1560 eggs</dd>
    <dt>Time to walk across the U.S. (without sleeping)</dt>
    <dd>2600mile ÷3mph = 5.15873 week</dd>
    <dt>Gasoline efficiency in an alternative unit</dt>
    <dd>1÷(25mile ÷gallon) = 79.36508 microhogshead ÷furlong</dd>
</dl>

<h3>Science &amp; Physics</h3>
<dl>
    <dt>Electricity</dt>
    <dd>3volt ×150mA = 0.45 watt</dd>
    <dt>Approximate time it takes light to get from the sun to the Earth.</dt>
    <dd>sundist ÷c = 8.316755 minute</dd>
    <dt>EM frequency to wavelength</dt>
    <dd>light ÷2.417GHz = 12.403494 cm</dd>
    <dt>using e=mc² to figure out how much energy 1g of matter is equivalent to</dt>
    <dd>1gram energy = 21.480764 kiloton tnt</dd>
</dl>

    <h2>This is free software / open source</h2>
        
    <p>Units is an Android interpretation of the classic <a href="http://www.gnu.org/software/units/">GNU Units</a> utility, using <a href="http://units-in-java.sourceforge.net/">Units in Java</a> for all the heavy lifting.</p>

    <p>If you wish to get the source to this application and/or contribute to its ongoing development, please visit the <a href="http://staticfree.info/projects/units/">Android Units project page</a>.</p>

    <p class="webonly">The source is available by way of the <a href="git://staticfree.info/git/Units/">Android Units git repository</a>. You can grab a copy for yourself by running:</p>
        <pre class="webonly">
              <code>git clone git://staticfree.info/git/Units/</code>
        </pre>


    <h2>License (GPLv3)</h2>
    <p>Android Units<br/>
    ©2010 Steve Pomeroy</p>

    <p>This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.</p>

    <p>This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.</p>

    <p>You should have received a copy of the GNU General Public License
    along with this program.  If not, see <a href="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</a>.</p>
</body>
</html>
